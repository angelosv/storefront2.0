{"version":3,"file":"0.js","sources":["webpack:///./components/Drawer/Drawer.tsx","webpack:///./containers/LayoutContainer/Header/MobileDrawer.tsx","webpack:///./containers/LayoutContainer/Header/MobileHeader.tsx","webpack:///./contexts/drawer/drawer.context.tsx","webpack:///./contexts/drawer/drawer.provider.tsx","webpack:///./helper/debounce.ts","webpack:///./helper/useComponentSize.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport RcDrawer from 'rc-drawer';\n\ntype DrawerProps = {\n  className?: string;\n  children?: any;\n  closeButton?: any;\n  closeButtonStyle?: any;\n  drawerHandler: any;\n  toggleHandler: any;\n  open: any;\n  width?: string;\n  placement?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nconst Drawer: React.FunctionComponent<DrawerProps> = ({\n  className,\n  children,\n  closeButton,\n  closeButtonStyle,\n  drawerHandler,\n  toggleHandler,\n  open,\n  width,\n  placement,\n  ...props\n}) => {\n  return (\n    <Fragment>\n      <RcDrawer\n        open={open}\n        onClose={toggleHandler}\n        className={`drawer ${className ? className : ''}`.trim()}\n        width={width}\n        placement={placement}\n        handler={false}\n        level={null}\n        duration=\".4s\"\n        {...props}\n      >\n        {closeButton && (\n          <div\n            className=\"drawer__close\"\n            onClick={toggleHandler}\n            style={closeButtonStyle}\n          >\n            {closeButton}\n          </div>\n        )}\n\n        {children}\n      </RcDrawer>\n      <div\n        className=\"drawer__handler\"\n        style={{ display: 'inline-block' }}\n        onClick={toggleHandler}\n      >\n        {drawerHandler}\n      </div>\n    </Fragment>\n  );\n};\n\nDrawer.defaultProps = {\n  width: '300px',\n  placement: 'left',\n};\n\nexport default Drawer;\n","import React, { useContext } from 'react';\nimport { openModal } from '@redq/reuse-modal';\nimport Router from 'next/router';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Drawer from 'components/Drawer/Drawer';\nimport Button from 'components/Button/Button';\nimport NavLink from 'components/NavLink/NavLink';\nimport { CloseIcon } from 'components/AllSvgIcon';\nimport { DrawerContext } from 'contexts/drawer/drawer.context';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport AuthenticationForm from '../../SignInOutForm/Form';\nimport { FormattedMessage } from 'react-intl';\nimport {\n  HamburgerIcon,\n  DrawerContentWrapper,\n  DrawerClose,\n  DrawerProfile,\n  LogoutView,\n  LoginView,\n  UserAvatar,\n  UserDetails,\n  DrawerMenu,\n  DrawerMenuItem,\n  UesrOptionMenu,\n} from './Header.style';\nimport UserImage from 'image/user.jpg';\n\nimport {\n  PROCEED_TO_CHECKOUT_PAGE,\n  ALTERNATIVE_CHECKOUT_PAGE,\n  PROFILE_PAGE,\n  YOUR_ORDER,\n  ORDER_RECEIVED,\n  HELP_PAGE,\n  OFFER_PAGE,\n} from 'constants/navigation';\n\nconst DrawerMenuItems = [\n  {\n    id: 1,\n    intlLabelId: 'navLinkHome',\n    label: 'Home',\n    href: '/',\n  },\n  {\n    id: 2,\n    intlLabelId: 'navlinkCheckout',\n    label: 'Checkout',\n    href: PROCEED_TO_CHECKOUT_PAGE,\n  },\n  {\n    id: 3,\n    label: 'Checkout Second',\n    intlLabelId: 'alternativeCheckout',\n    href: ALTERNATIVE_CHECKOUT_PAGE,\n  },\n  {\n    id: 4,\n    intlLabelId: 'navlinkProfile',\n    label: 'Profile',\n    href: PROFILE_PAGE,\n  },\n  {\n    id: 5,\n    intlLabelId: 'sidebarYourOrder',\n    label: 'Order',\n    href: YOUR_ORDER,\n  },\n  {\n    id: 6,\n    intlLabelId: 'navlinkOrderReceived',\n    label: 'Received',\n    href: ORDER_RECEIVED,\n  },\n  {\n    id: 7,\n    intlLabelId: 'navlinkHelp',\n    label: 'Help',\n    href: HELP_PAGE,\n  },\n  {\n    id: 8,\n    intlLabelId: 'navlinkOffer',\n    label: 'Offer',\n    href: OFFER_PAGE,\n  },\n];\n\nconst MobileDrawer: React.FunctionComponent = () => {\n  const { state, dispatch } = useContext<any>(DrawerContext);\n  const {\n    authState: { isAuthenticated },\n    authDispatch,\n  } = useContext<any>(AuthContext);\n  // Toggle drawer\n  const toggleHandler = React.useCallback(() => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n  }, [dispatch]);\n\n  const handleLogout = () => {\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('access_token');\n      authDispatch({ type: 'SIGN_OUT' });\n      Router.push('/');\n    }\n  };\n  const resetSearch = () => {\n    dispatch({\n      type: 'RESET',\n    });\n  };\n\n  const signInOutForm = () => {\n    dispatch({\n      type: 'TOGGLE',\n    });\n\n    authDispatch({\n      type: 'SIGNIN',\n    });\n\n    openModal({\n      show: true,\n      overlayClassName: 'quick-view-overlay',\n      closeOnClickOutside: true,\n      component: AuthenticationForm,\n      closeComponent: '',\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'quick-view-modal',\n        width: 458,\n        height: 'auto',\n      },\n    });\n  };\n\n  return (\n    <Drawer\n      width='316px'\n      drawerHandler={\n        <HamburgerIcon>\n          <span />\n          <span />\n          <span />\n        </HamburgerIcon>\n      }\n      open={state.isOpen}\n      toggleHandler={toggleHandler}\n      closeButton={\n        <DrawerClose>\n          <CloseIcon />\n        </DrawerClose>\n      }\n    >\n      <Scrollbars autoHide>\n        <DrawerContentWrapper>\n          <DrawerProfile>\n            {isAuthenticated ? (\n              <LoginView>\n                <UserAvatar>\n                  <img src={UserImage} alt='user_avatar' />\n                </UserAvatar>\n                <UserDetails>\n                  <h3>David Kinderson</h3>\n                  <span>+990 374 987</span>\n                </UserDetails>\n              </LoginView>\n            ) : (\n              <LogoutView>\n                <Button\n                  intlButtonId='mobileSignInButtonText'\n                  title='Join In'\n                  size='small'\n                  className='sign_in'\n                  // variant=\"primary\"\n                  onClick={signInOutForm}\n                />\n              </LogoutView>\n            )}\n          </DrawerProfile>\n\n          <DrawerMenu>\n            {DrawerMenuItems.map((item) => (\n              <DrawerMenuItem key={item.id}>\n                <NavLink\n                  onClick={toggleHandler}\n                  href={item.href}\n                  label={item.label}\n                  intlId={item.intlLabelId}\n                  className='drawer_menu_item'\n                />\n              </DrawerMenuItem>\n            ))}\n          </DrawerMenu>\n\n          {isAuthenticated && (\n            <UesrOptionMenu>\n              <DrawerMenuItem>\n                <NavLink\n                  href='/profile'\n                  label='Your Account Settings'\n                  className='drawer_menu_item'\n                  intlId='navlinkAccountSettings'\n                />\n              </DrawerMenuItem>\n              <DrawerMenuItem>\n                <div onClick={handleLogout} className='drawer_menu_item'>\n                  <span className='logoutBtn'>\n                    <FormattedMessage\n                      id='navlinkLogout'\n                      defaultMessage='Logout'\n                    />\n                  </span>\n                </div>\n              </DrawerMenuItem>\n            </UesrOptionMenu>\n          )}\n        </DrawerContentWrapper>\n      </Scrollbars>\n    </Drawer>\n  );\n};\n\nexport default MobileDrawer;\n","import React, { useState, useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport { openModal, closeModal } from '@redq/reuse-modal';\nimport { DrawerProvider } from 'contexts/drawer/drawer.provider';\nimport MobileDrawer from './MobileDrawer';\nimport {\n  MobileHeaderWrapper,\n  MobileHeaderInnerWrapper,\n  DrawerWrapper,\n  LogoWrapper,\n  SearchWrapper,\n  SearchModalWrapper,\n  SearchModalClose,\n} from './Header.style';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { SearchContext } from 'contexts/search/search.context';\nimport { HeaderContext } from 'contexts/header/header.context';\nimport LogoImage from 'image/logo.svg';\n\nimport { SearchIcon, LongArrowLeft } from 'components/AllSvgIcon';\nimport Logo from 'components/Logo/Logo';\nimport LanguageSwitcher from './Menu/LanguageSwitcher/LanguageSwitcher';\nimport { isCategoryPage } from '../is-home-page';\nimport useDimensions from 'helper/useComponentSize';\n\ntype MobileHeaderProps = {\n  className?: string;\n  pathname?: string;\n  closeSearch?: any;\n};\ntype SearchModalProps = {\n  state?: any;\n  handleSearch?: any;\n  pathname?: string;\n};\n\nconst SearchModal: React.FC<SearchModalProps> = ({\n  state,\n  pathname,\n  handleSearch,\n}) => {\n  const router = useRouter();\n  const [text, setText] = useState(state.text || '');\n  const handleSearchInput = (text: string) => {\n    setText(text);\n  };\n  const { page, ...urlState } = state;\n\n  const handleClickSearchButton = () => {\n    handleSearch(text);\n    router.push({\n      pathname: pathname,\n      query: {\n        ...urlState,\n        text,\n      },\n    });\n    closeModal();\n  };\n  return (\n    <SearchModalWrapper>\n      <SearchModalClose type='submit' onClick={() => closeModal()}>\n        <LongArrowLeft />\n      </SearchModalClose>\n      <SearchBox\n        className='header-modal-search'\n        bordered={false}\n        inputStyle={{ height: 35 }}\n        buttonText=''\n        placeholder='Search'\n        handleSearch={handleSearchInput}\n        value={text}\n        onClick={handleClickSearchButton}\n        pathname={pathname}\n      />\n    </SearchModalWrapper>\n  );\n};\n\nconst MobileHeader: React.FC<MobileHeaderProps> = ({ className, pathname }) => {\n  const { state, dispatch } = useContext(SearchContext);\n\n  const [mobileHeaderRef, dimensions] = useDimensions();\n  const { headerDispatch } = useContext<any>(HeaderContext);\n\n  const headerHeight = dimensions.height;\n\n  React.useEffect(() => {\n    headerDispatch({\n      type: 'GET_MOBILE_HEIGHT',\n      payload: {\n        ...state,\n        mobileHeight: headerHeight,\n      },\n    });\n  }, [headerHeight]);\n\n  const handleSearch = (text: string) => {\n    dispatch({\n      type: 'UPDATE',\n      payload: {\n        ...state,\n        text,\n      },\n    });\n  };\n  const handleSearchModal = () => {\n    openModal({\n      show: true,\n      config: {\n        enableResizing: false,\n        disableDragging: true,\n        className: 'search-modal-mobile',\n        width: '100%',\n        height: '100%',\n      },\n      closeOnClickOutside: false,\n      component: SearchModal,\n      componentProps: { state, pathname, handleSearch },\n      closeComponent: () => <div />,\n    });\n  };\n\n  const isHomePage = isCategoryPage(pathname);\n\n  return (\n    <DrawerProvider>\n      <MobileHeaderWrapper>\n        <MobileHeaderInnerWrapper className={className} ref={mobileHeaderRef}>\n          <DrawerWrapper>\n            <MobileDrawer />\n          </DrawerWrapper>\n\n          <LogoWrapper>\n            <Logo imageUrl={LogoImage} alt='shop logo' />\n          </LogoWrapper>\n\n          <LanguageSwitcher />\n\n          {isHomePage ? (\n            <SearchWrapper\n              onClick={handleSearchModal}\n              className='searchIconWrapper'\n            >\n              <SearchIcon />\n            </SearchWrapper>\n          ) : null}\n        </MobileHeaderInnerWrapper>\n      </MobileHeaderWrapper>\n    </DrawerProvider>\n  );\n};\n\nexport default MobileHeader;\n","import { createContext } from 'react';\n\nexport const DrawerContext = createContext({});\n","import React, { useReducer } from 'react';\nimport { DrawerContext } from './drawer.context';\nconst initialState = {\n  isOpen: false,\n};\n\nfunction reducer(state: any, action: any) {\n  switch (action.type) {\n    case 'TOGGLE':\n      return {\n        ...state,\n        isOpen: !state.isOpen,\n      };\n    default:\n      return state;\n  }\n}\nexport const DrawerProvider: React.FunctionComponent = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <DrawerContext.Provider value={{ state, dispatch }}>\n      {children}\n    </DrawerContext.Provider>\n  );\n};\n","function debounce(func, wait, immediate) {\n  let timeout;\n\n  return function executedFunction(...args) {\n    const context = this;\n    const later = function() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    const callNow = immediate && !timeout;\n\n    clearTimeout(timeout);\n\n    timeout = setTimeout(later, wait);\n\n    if (callNow) func.apply(context, args);\n  };\n}\n\nexport default debounce;\n","import { useState, useCallback, useEffect } from 'react';\nimport debounce from './debounce'; // maybe use a hook instead?\n\nfunction useDimensions(\n  liveMeasure = true,\n  delay = 250,\n  initialDimensions = {}\n) {\n  const [dimensions, setDimensions] = useState(initialDimensions);\n  const [node, setNode] = useState(null);\n\n  const ref = useCallback(newNode => {\n    setNode(newNode);\n  }, []);\n\n  useEffect(() => {\n    // need ref to continue\n    if (!node) {\n      return;\n    }\n\n    const measure = () => {\n      window.requestAnimationFrame(() => {\n        const newDimensions = node.getBoundingClientRect();\n        setDimensions(newDimensions);\n      });\n    };\n    // invoke measure right away\n    measure();\n\n    if (liveMeasure) {\n      const debounceMeasure = debounce(measure, delay);\n\n      if ('ResizeObserver' in window) {\n        const resizeObserver = new ResizeObserver(debounceMeasure);\n        resizeObserver.observe(node);\n        window.addEventListener('scroll', debounceMeasure);\n\n        return () => {\n          resizeObserver.disconnect();\n          window.removeEventListener('scroll', debounceMeasure);\n        };\n      }\n      window.addEventListener('resize', debounceMeasure);\n      window.addEventListener('scroll', debounceMeasure);\n\n      return () => {\n        window.removeEventListener('resize', debounceMeasure);\n        window.removeEventListener('scroll', debounceMeasure);\n      };\n    }\n  }, [node, liveMeasure, delay]);\n\n  return [ref, dimensions, node];\n}\n\nexport default useDimensions;\n\n// Usage\n\n// function App() {\n//   const [wrapperRef, dimensions] = useDimensions();\n\n//   return (\n//     <div ref={wrapperRef}>\n//       height: {dimensions.height}\n//       width: {dimensions.width}\n//     </div>\n//   );\n// }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAaA;AAWA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AAEA;AAUA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAFA;AACA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA,iBAIA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AANA;AAcA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiaA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClOA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAFA;AAOA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAFA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAFA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAcA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;;;;;;;;;ACzJA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAPA;AASA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;ACxBA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}